{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/employee/employee.component.ts","./src/app/employee/employee.component.html","./src/app/list-employees/list-employees.component.ts","./src/app/list-employees/list-employees.component.html","./src/app/product.pipe.ts","./src/app/product/product-detail/product-detail.component.ts","./src/app/product/product-detail/product-detail.component.html","./src/app/product/product.component.ts","./src/app/product/product.component.html","./src/app/product/product.guard.ts","./src/app/product/product.module.ts","./src/app/product/product.service.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/shared/custom.validators.ts","./src/app/shared/employees.service.ts","./src/app/star/star.component.ts","./src/app/star/star.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'mantra';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProductComponent } from './product/product.component';\nimport { RouterModule } from '@angular/router';\nimport { ProductPipe } from './product.pipe';\nimport { StarComponent } from './star/star.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ProductDetailComponent } from './product/product-detail/product-detail.component';\nimport { ProductGuard } from './product/product.guard';\nimport { ProductModule } from './product/product.module';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RegisterComponent } from './register/register.component';\nimport { ListEmployeesComponent } from './list-employees/list-employees.component';\n\n@NgModule({\n  declarations: [AppComponent, EmployeeComponent, RegisterComponent, ListEmployeesComponent, ListEmployeesComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ProductModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot([\n      { path: 'employee', component: EmployeeComponent },\n      { path: 'register', component: RegisterComponent },\n      { path: 'list', component: ListEmployeesComponent },\n      { path: 'edit/:id', component: RegisterComponent }\n    ]),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { CustomValidators } from '../shared/custom.validators';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.scss'],\n})\nexport class EmployeeComponent implements OnInit {\n  constructor(private fb: FormBuilder) {}\n  employeeForm;\n\n  validationMessages = {\n    fullName: {\n      required: 'first Name is required',\n      minLength: 'firstname should be 2 min length',\n      maxLength: 'firstname should be 10 digit max length',\n    },\n    email: {\n      required: 'email is Required',\n      emailDomain: 'email domain should be abc.com',\n    },\n    phone: { required: 'phone is Required' },\n  };\n\n  formErrors = {\n    fullName: '',\n    email: '',\n    phone: '',\n    skillName: '',\n    years: '',\n  };\n\n  ngOnInit(): void {\n    this.employeeForm = this.fb.group({\n      fullName: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.maxLength(10),\n        ],\n      ],\n      contactPreference: ['email'],\n      email: ['', [Validators.required, CustomValidators.emailDomain]],\n      phone: [''],\n      skills: this.fb.group({\n        skillName: ['', Validators.required],\n        years: ['', Validators.required],\n      }),\n    });\n    this.employeeForm.valueChanges.subscribe((data) => {\n      this.logValidationErrors(this.employeeForm);\n    });\n    this.employeeForm\n      .get('contactPreference')\n      .valueChanges.subscribe((data) => {\n        this.onContactPreferenceChange(data);\n      });\n  }\n\n  onContactPreferenceChange(selectedValue: string) {\n    const phoneControl = this.employeeForm.get('phone');\n    if (selectedValue === 'phone') {\n      phoneControl.setValidators(Validators.required);\n    } else {\n      phoneControl.clearValidators();\n    }\n    phoneControl.updateValueAndValidity();\n  }\n\n  logValidationErrors(group: FormGroup = this.employeeForm) {\n    Object.keys(group.controls).forEach((key: string) => {\n      const abstractControl = group.get(key);\n      if (abstractControl instanceof FormGroup) {\n        this.logValidationErrors(abstractControl);\n      } else {\n        this.formErrors[key] = '';\n        for (const errorKey in abstractControl.errors) {\n          if (errorKey && !abstractControl.valid && abstractControl.touched) {\n            if (this.validationMessages[key]) {\n              this.formErrors[key] +=\n                this.validationMessages[key][errorKey] + ' ';\n            }\n          }\n        }\n      }\n    });\n  }\n\n  storeValues() {\n    // this.logValidationErrors(this.employeeForm);\n  }\n}\n\n","<div class=\"red\">\n    <form [formGroup]=\"employeeForm\" (ngSubmit)=\"storeValues()\">\n        <div>\n            <label>Name</label>\n            <input type=\"text\" formControlName=\"fullName\" (blur)=\"logValidationErrors()\" />\n            <div class=\"has-errors\" *ngIf=\"formErrors.fullName\">{{formErrors.fullName}}</div>\n        </div>    \n\n\n        <div>\n            Email : <input type=\"radio\" value=\"email\" formControlName=\"contactPreference\" />\n            Phone : <input type=\"radio\" value=\"phone\" formControlName=\"contactPreference\" />\n        </div>\n\n        <div>\n            <label>email</label>\n            <input type=\"text\" formControlName=\"email\" (blur)=\"logValidationErrors()\" />\n            <div class=\"has-errors\" *ngIf=\"formErrors.email\">{{formErrors.email}}</div>\n        </div>\n\n        <div>\n            <label> Phone </label>\n            <input type=\"text\" formControlName=\"phone\" />\n            <div class=\"has-errors\" *ngIf=\"formErrors.phone\">{{formErrors.phone}}</div>\n        </div>\n\n\n        <ng-container formGroupName=\"skills\">\n            <div>\n                <label>skill Name</label>\n                <input type=\"text\" formControlName=\"skillName\" (blur)=\"logValidationErrors()\" />\n                <div class=\"has-errors\" *ngIf=\"formErrors.skillName\">{{formErrors.skillName}}</div>\n            </div>\n\n            <div>\n                <label>no of years</label>\n                <input type=\"text\" formControlName=\"years\" />\n            </div>\n        </ng-container>\n\n        {{this.employeeForm.value | json}}\n        <input type=\"submit\" value=\"save\" />\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Employees } from '../shared/employees.service';\n\n@Component({\n  selector: 'app-list-employees',\n  templateUrl: './list-employees.component.html',\n  styleUrls: ['./list-employees.component.scss'],\n})\nexport class ListEmployeesComponent implements OnInit {\n  listEmployees;\n\n  constructor(private employees: Employees, private _route: Router) {}\n\n  ngOnInit(): void {\n    this.employees\n      .getEmployees()\n      .subscribe((listEmployees) => (this.listEmployees = listEmployees));\n  }\n  editEmployee(id: number) {\n    this._route.navigate(['/edit', id]);\n  }\n}\n","<p>list-employees works!</p>\n\n<table border=\"1\">\n    <tr>\n        <td>Name</td>\n        <td>Designation</td>\n        <td>salary</td>\n        <td>Action</td>\n    </tr>\n    <tr *ngFor=\"let employee of listEmployees\">\n        <td>{{employee.empName}}</td>\n        <td>{{employee.designation}}</td>\n        <td>{{employee.salary}}</td>\n        <td><input type=\"button\" value=\"edit\" (click)=\"editEmployee(employee.id)\" /></td>\n    </tr>\n</table>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'product'\n})\nexport class ProductPipe implements PipeTransform {\n\n  transform(str: string, character: string): unknown {\n    // return value.slice(0, 4);\n    return str.replace(\"-\", \" \");\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.scss']\n})\nexport class ProductDetailComponent implements OnInit {\n\n  constructor(private route:ActivatedRoute) { }\n\n  product_id= this.route.snapshot.paramMap.get('id');\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>product-detail works!</p>\n{{product_id}}\n\n<a [routerLink]=\"['/product']\">Back</a>","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { take } from 'rxjs/operators';\nimport { ProductService } from './product.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss']\n})\nexport class ProductComponent implements OnInit {\n\n\n  productsArray=new FormArray([]);\n\n  \n  productForm= new FormGroup({\n    product_name: new FormControl('',[Validators.required]),\n    price: new FormControl('',[Validators.required]),\n    rating:new FormControl('',[Validators.required])\n  });\n\n  constructor(private productService:ProductService) { \n    this.productsArray.push(this.productForm);\n  }\n\n  appendProducts(){\n    this.productsArray.push(this.productForm);\n  }\n\n\n\n/* products=[{\n  name:'Apple-',\n  price:10,\n  rating:2\n},{\n  name:'Mango',\n  price:20,\n  rating:1\n}] */\n\nproducts;\nerrorMessage;\n  ngOnInit(): void {\n    this.productService.getProducts().\n    subscribe(products => {this.products = products})  \n  }\n\n  filterProducts(product_name){\n    this.products= this.products.filter((product)=> product.name.indexOf(product_name)!==-1)\n   /*  this.productService.getProducts().subscribe((products) => {\n      console.log(products);\n    }); */\n  }\n\n  newProduct={\n    name:'Banana-',\n    price:30,\n    rating:5\n  }\n\n  addProduct(){    \n    console.log(this.productForm.value);\n   this.products.push(this.productForm.value);\n  }\n\n  eventEmitted(value){\nalert(value);\n  }\n\n}\n","<select (change)=\"filterProducts($event.target.value)\">\n    <option>select Product</option>\n    <option *ngFor=\"let product of products\">{{product.product_name}}</option>\n</select>\n<div *ngIf=\"products\">\n    <table border=\"1\" cellpadding=\"0\" cellspacing=\"0\">\n        <tr>\n            <td>\n                Name\n            </td>\n            <td>price</td>\n            <td>Rating</td>\n            <td>Detail (Routing with parameters)</td>\n\n        </tr>\n        <tr *ngFor=\"let product of products\">\n            <td>{{product.product_name | product:'-'}}</td>\n            <td>{{product.price}}</td>\n            <td>\n                <app-star [rating]='product.rating' (ratingClicked)=\"eventEmitted($event)\"></app-star>\n            </td>\n            <td> <a [routerLink]=\"['/product-detail', product.id ]\">Product Detail</a></td>\n\n        </tr>\n    </table>\n</div>\n<div>\n    {{errorMessage?.statusText}}\n</div>\n<h2>Add Product</h2>\n\n<div *ngFor=\"let productsArr of productsArray.controls\">\n   \n        <form (ngSubmit)=\"addProduct()\">\n            <ng-container [formGroup]=\"productsArr\">\n            Name : <input type=\"text\" formControlName=\"product_name\" />\n            Price : <input type=\"text\" formControlName=\"price\" />\n            Rating : <input type=\"text\" formControlName=\"rating\" />\n            <input type=\"submit\" value=\"Save\" />\n            {{ productForm.value | json }}\n        </ng-container>\n        </form>\n   \n</div>\n\n <input type=\"button\" value=\"append\" (click)=\"appendProducts()\" /> \n\n<h2>Routing with parameters</h2>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductGuard implements CanActivate {\n\n  constructor(private router: Router){\n\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n   \n     const id=+next.url[1].path;\n      if(id==1){\n        this.router.navigate(['/product']);\n        return false;\n      }\n\n      return true;\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductComponent } from './product.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\nimport { ProductGuard } from './product.guard';\nimport { RouterModule } from '@angular/router';\nimport { ProductPipe } from '../product.pipe';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StarComponent } from '../star/star.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    ProductComponent,\n    ProductDetailComponent,\n    StarComponent,\n    ProductPipe,\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule.forChild([\n      { path: 'product', component: ProductComponent },\n      {\n        path: 'product-detail/:id',\n        canActivate: [ProductGuard],\n        component: ProductDetailComponent,\n      },\n    ]),\n    FormsModule,\n    ReactiveFormsModule\n  ],\n})\nexport class ProductModule {}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\n\nimport { map, take } from 'rxjs/operators';\nimport { IProduct } from './product';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private http: HttpClient) { }\n\n  private API_URL=\"http://localhost/oshop/cart.php\";\n\n  getProducts(): Observable<IProduct[]>{\n    return this.http.get<IProduct[]>(this.API_URL);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CustomValidators } from '../shared/custom.validators';\nimport { Employees } from '../shared/employees.service';\nimport { IEmployee } from '../shared/IEmployee';\nimport { ISkills } from '../shared/ISkills';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private employeeService: Employees\n  ) {}\n\n  employee: IEmployee;\n\n  registerForm: FormGroup;\n\n  validationMesages = {\n    name: {\n      required: 'Name should no be blank',\n    },\n    emailGroup: {\n      matchEmail: 'email and confirm email should be same',\n    },\n    email: {\n      required: 'email should no be blank',\n    },\n    cfmEmail: {\n      required: 'Confirm email should no be blank',\n    },\n    skillName: {\n      required: 'Skill Name is Required',\n    },\n    experience: {\n      required: 'Experience is Required',\n    },\n    proficiency: {\n      required: 'proficiency is Required',\n    },\n  };\n\n  formErrors = {\n    name: '',\n    emailGroup: '',\n    email: '',\n    cfmEmail: '',\n    skillName: '',\n    experience: '',\n    proficiency: '',\n  };\n\n  ngOnInit(): void {\n    this.registerForm = this.fb.group({\n      name: ['', Validators.required],\n      emailGroup: this.fb.group(\n        {\n          email: ['', Validators.required],\n          cfmEmail: ['', Validators.required],\n        },\n        { validator: CustomValidators.matchEmail }\n      ),\n      skills: this.fb.array([this.addSkillsGroup()]),\n    });\n    /*  this.registerForm.valueChanges.subscribe((data) => {\n      this.logValidationErrors(this.registerForm);\n    }); */\n    this.getEdittedEmployee();\n    this.employee = {\n      empName: '',\n      email: '',\n      skills: [],\n    };\n  }\n\n  addSkillsGroup(): FormGroup {\n    return this.fb.group({\n      skillName: ['', Validators.required],\n      experience: ['', Validators.required],\n      proficiency: ['', Validators.required],\n    });\n  }\n\n  addNewSkill() {\n    (<FormArray>this.registerForm.get('skills')).push(this.addSkillsGroup());\n  }\n\n  removeSkills(i): void {\n    (<FormArray>this.registerForm.get('skills')).removeAt(i);\n  }\n\n  logValidationErrors(group: FormGroup = this.registerForm) {\n    Object.keys(group.controls).forEach((key: string) => {\n      const abstractControl = group.get(key);\n\n      this.formErrors[key] = '';\n      for (const errorKey in abstractControl.errors) {\n        if (errorKey && abstractControl.touched) {\n          if (this.validationMesages[key]) {\n            this.formErrors[key] += this.validationMesages[key][errorKey] + ' ';\n          }\n        }\n      }\n\n      if (abstractControl instanceof FormGroup) {\n        this.logValidationErrors(abstractControl);\n      }\n\n      if (abstractControl instanceof FormArray) {\n        for (const control of abstractControl.controls) {\n          if (control instanceof FormGroup) {\n            this.logValidationErrors(control);\n          }\n        }\n      }\n    });\n  }\n\n  getEdittedEmployee() {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.employeeService\n      .getEmployeeById(id)\n      .subscribe((fetchedEmployee: IEmployee) => {\n        // console.log('===', fetchedEmployee[0].email);\n        this.setFormValue(fetchedEmployee);\n      });\n  }\n\n  setFormValue(fetchedEmployee: IEmployee) {\n    this.registerForm.patchValue({\n      name: fetchedEmployee[0].empName,\n      emailGroup: {\n        email: fetchedEmployee[0].email,\n        cfmEmail: fetchedEmployee[0].email,\n      },\n    });\n\n    this.registerForm.setControl(\n      'skills',\n      this.setSkills(fetchedEmployee[0].skills)\n    );\n  }\n\n  setSkills(skills): FormArray {\n    const formArray = new FormArray([]);\n    // console.log('skills===', skills);\n    const skills1 = JSON.parse(skills);\n\n    skills1.forEach((element) => {\n      formArray.push(\n        this.fb.group({\n          skillName: element.skill_name,\n          experience: element.experience,\n          proficiency: element.proficiency,\n        })\n      );\n    });\n\n    return formArray;\n  }\n\n  submitRegisterForm() {\n    // console.log(this.registerForm);\n    this.mapValues(this.registerForm);\n    this.employeeService.updateEmployee(this.employee).subscribe((s) => {});\n  }\n\n  mapValues(registerForm) {\n    // console.log(registerForm.value.name);\n    this.employee.empName = registerForm.value.name;\n    this.employee.skills = registerForm.value.skills;\n  }\n}\n","<div class=\"container\">\n    <form [formGroup]=\"registerForm\" id=\"form_login\" (ngSubmit)=\"submitRegisterForm()\">\n        <div class=\"form-control\">\n            <label>Name</label>\n            <input type=\"text\" formControlName=\"name\" (blur)=\"logValidationErrors()\"  />\n            <div *ngIf=\"formErrors.name\">{{formErrors.name}}</div>\n        </div>\n\n        <ng-container formGroupName=\"emailGroup\">\n            <div class=\"form-control\">\n                <label>Email</label>\n                <input type=\"text\" formControlName=\"email\" (blur)=\"logValidationErrors()\" />\n                <div *ngIf=\"formErrors.email\">{{formErrors.email}}</div>\n            </div>\n            <div class=\"form-control\">\n                <label>Confirm Email</label>\n                <input type=\"text\" formControlName=\"cfmEmail\" (blur)=\"logValidationErrors()\" />\n                <div *ngIf=\"formErrors.cfmEmail || formErrors.emailGroup\">\n                    {{formErrors.cfmEmail?formErrors.cfmEmail:formErrors.emailGroup}}</div>\n            </div>\n        </ng-container>\n\n        <input type=\"button\" (click)=\"addNewSkill()\" value=\"Add Skills\"\n            [ngClass]=\"{'btn-disabled':registerForm.get('skills').invalid}\" />\n\n        <ng-container formArrayName=\"skills\" *ngFor=\"let skill of registerForm.get('skills')['controls']; let i=index\">\n            <div [formGroupName]=\"i\" class=\"add-skills\">\n\n                <div class=\"form-control\">\n                    <label [attr.for]=\"'skillName'+i\">Skill</label>\n                    <input type=\"text\" formControlName=\"skillName\" [id]=\"'skillName'+i\" />\n                    <div *ngIf=\"skill.get('skillName').errors?.required\">\n                        SkillName is Required</div>\n                </div>\n\n                <div class=\"form-control\">\n                    <label>Experience</label>\n                    <input type=\"text\" formControlName=\"experience\" [id]=\"'experience'+i\" />\n                    <div *ngIf=\"skill.get('experience').errors?.required\">\n                        Experience is Required</div>\n                </div>\n\n                <div class=\"form-control\">\n                    <label>Proficiency</label>\n                    <div>\n                        <input type=\"radio\" formControlName=\"proficiency\" value=\"Beginner\" />\n                        Beginner\n                        <input type=\"radio\" formControlName=\"proficiency\" value=\"intermediate\" /> intermediate\n                        <input type=\"radio\" formControlName=\"proficiency\" value=\"Advanced\" />\n                        Advanced\n                        <div *ngIf=\"skill.get('proficiency').errors?.required\">\n                            Proficiency is Required</div>\n                    </div>\n                </div>\n\n                <div *ngIf=\"registerForm.get('skills')?.length>1\">\n                    <input type=\"button\" value=\"remove\" (click)=\"removeSkills(i)\" />\n                </div>\n            </div>\n        </ng-container>\n        <div>\n            <input type=\"submit\" value=\"Submit\" [ngClass]=\"{'btn-disabled':!registerForm.valid}\" />\n        </div>\n\n\n    </form>\n\n</div>","import { AbstractControl, FormGroup } from '@angular/forms';\r\n\r\nexport class CustomValidators {\r\n  static emailDomain(control: AbstractControl): { [key: string]: any } | null {\r\n    const email = control.value;\r\n    const domain = email.substring(email.lastIndexOf('@') + 1);\r\n    if (domain === 'abc.com' || email === '') {\r\n      return null;\r\n    } else {\r\n      return { emailDomain: true };\r\n    }\r\n  }\r\n\r\n  static matchEmail(group: AbstractControl): { [key: string]: any } | null {\r\n    const email = group.get('email').value;\r\n    const cfmEmail = group.get('cfmEmail').value;\r\n    if (email === cfmEmail) {\r\n      return null;\r\n    } else {\r\n      return { matchEmail: true };\r\n    }\r\n  }\r\n  static checkLength(control: AbstractControl): { [key: string]: any } | null {\r\n    const phoneNo = control.value;\r\n    const phoneLen = phoneNo.length;\r\n    if (phoneLen > 4) {\r\n      return { checkLength: true };\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import {\r\n  HttpClient,\r\n  HttpClientModule,\r\n  HttpErrorResponse,\r\n  HttpHeaders,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { IEmployee } from './IEmployee';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class Employees {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private API_URL = 'http://localhost/oshop/employee.php';\r\n\r\n  getEmployees(): Observable<IEmployee> {\r\n    return this.http.get<IEmployee>(this.API_URL);\r\n  }\r\n  handleError(error: HttpErrorResponse) {\r\n    if (error instanceof ErrorEvent) {\r\n      console.log('error=', error);\r\n    } else {\r\n      console.log('service error');\r\n    }\r\n  }\r\n\r\n  getEmployeeById(id): Observable<IEmployee> {\r\n    return this.http.get<IEmployee>(this.API_URL + '?id=' + id);\r\n  }\r\n\r\n  updateEmployee(employee: IEmployee) {\r\n    // console.log('sahil=', employee.empName);\r\n    return this.http.post<IEmployee>(this.API_URL + '?id=1', employee, {\r\n      headers: new HttpHeaders({\r\n        'content-type': 'application/json',\r\n      }),\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, OnInit, Output,EventEmitter } from '@angular/core';\n\n\n@Component({\n  selector: 'app-star',\n  templateUrl: './star.component.html',\n  styleUrls: ['./star.component.scss']\n})\nexport class StarComponent implements OnInit,OnChanges {\n\n  @Input() rating:number;\n\n  @Output() ratingClicked : EventEmitter<string> = new EventEmitter<string>();\n\n  totalWidth:number; \n\n  constructor() { }\n  ngOnInit(): void {\n    \n  }\n\n  showRating(){\n    this.ratingClicked.emit(`rating id ${this.rating}`);\n  }\n\n  ngOnChanges(){\n    this.totalWidth=(this.rating*75)/5;\n  }\n\n}\n","<div [style.width.px]=\"totalWidth\" class=\"crop\">\n    <div style=\"width:75px\" (click)=\"showRating()\">\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n</div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}